==698== Memcheck, a memory error detector
==698== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==698== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==698== Command: ./hw08 inputs/test4.bin output4.bin
==698== Parent PID: 697
==698== 
--698-- 
--698-- Valgrind options:
--698--    --tool=memcheck
--698--    --log-file=memcheck.txt
--698--    --leak-check=full
--698--    --verbose
--698-- Contents of /proc/version:
--698--   Linux version 2.6.32-754.22.1.el6.x86_64 (mockbuild@x86-02.bsys.centos.org) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-23) (GCC) ) #1 SMP Tue Sep 17 16:24:44 UTC 2019
--698-- Arch and hwcaps: AMD64, amd64-sse3-cx16
--698-- Page sizes: currently 4096, max supported 4096
--698-- Valgrind library directory: /usr/lib64/valgrind
--698-- Reading syms from /home/shay/a/simpso89/JeremySimpsonECE264/2019FallProblems/Part2/HW08Struct/hw08
--698-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--698--    object doesn't have a dynamic symbol table
--698-- Reading syms from /lib64/ld-2.12.so
--698--   Considering /usr/lib/debug/.build-id/97/af4b77212f74cff72b6c013e6aa2d74a97ef60.debug ..
--698--   .. build-id is valid
--698-- Scheduler: using generic scheduler lock implementation.
--698-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==698== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-698-by-simpso89-on-ecegrid-thin1.ecn.purdue.edu
==698== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-698-by-simpso89-on-ecegrid-thin1.ecn.purdue.edu
==698== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-698-by-simpso89-on-ecegrid-thin1.ecn.purdue.edu
==698== 
==698== TO CONTROL THIS PROCESS USING vgdb (which you probably
==698== don't want to do, unless you know exactly what you're doing,
==698== or are doing some strange experiment):
==698==   /usr/lib64/valgrind/../../bin/vgdb --pid=698 ...command...
==698== 
==698== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==698==   /path/to/gdb ./hw08
==698== and then give GDB the following command
==698==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=698
==698== --pid is optional if only one valgrind process is running
==698== 
--698-- REDIR: 0x3d29e17f90 (strlen) redirected to 0x38049551 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--698-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--698-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
--698-- REDIR: 0x3d29e17da0 (index) redirected to 0x4a07c30 (index)
--698-- REDIR: 0x3d29e17e20 (strcmp) redirected to 0x4a08570 (strcmp)
--698-- Reading syms from /lib64/libc-2.12.so
--698--   Considering /usr/lib/debug/.build-id/a5/f93642576869a169bacf9771c674e0cb91fcbb.debug ..
--698--   .. build-id is valid
--698-- REDIR: 0x3d2a284d80 (strcasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--698-- REDIR: 0x3d2a287040 (strncasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--698-- REDIR: 0x3d2a282cf0 (__GI_strrchr) redirected to 0x4a07ab0 (__GI_strrchr)
--698-- REDIR: 0x3d2a27aac0 (malloc) redirected to 0x4a069ac (malloc)
--698-- REDIR: 0x3d2a289720 (memcpy) redirected to 0x4a08b60 (memcpy)
--698-- REDIR: 0x3d2a27b920 (free) redirected to 0x4a063a9 (free)
--698-- REDIR: 0x3d2a283400 (memchr) redirected to 0x4a08610 (memchr)
--698-- REDIR: 0x3d2a28ab50 (__GI___rawmemchr) redirected to 0x4a0a000 (__GI___rawmemchr)
--698-- REDIR: 0x3d2a2845b0 (mempcpy) redirected to 0x4a0a020 (mempcpy)
==698== 
==698== HEAP SUMMARY:
==698==     in use at exit: 0 bytes in 0 blocks
==698==   total heap usage: 6 allocs, 6 frees, 23,872 bytes allocated
==698== 
==698== All heap blocks were freed -- no leaks are possible
==698== 
==698== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 8 from 6)
--698-- 
--698-- used_suppression:      4 U1004-ARM-_dl_relocate_object
--698-- used_suppression:      4 glibc-2.5.x-on-SUSE-10.2-(PPC)-2a
==698== 
==698== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 8 from 6)
